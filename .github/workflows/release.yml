name: "Release"

# Trigger on push to main branch or manual dispatch
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # macOS builds
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
            target: "aarch64-apple-darwin"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
            target: "x86_64-apple-darwin"
          # Windows builds
          - platform: "windows-latest"
            args: "--target x86_64-pc-windows-msvc"
            target: "x86_64-pc-windows-msvc"
          - platform: "windows-latest"
            args: "--target i686-pc-windows-msvc"
            target: "i686-pc-windows-msvc"

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Windows x86 specific setup
      - name: Install x86 Rust toolchain (Windows only)
        if: matrix.target == 'i686-pc-windows-msvc'
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: i686-pc-windows-msvc

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "npm"

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || matrix.target }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Install frontend dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Build and release Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          # GitHub token for creating releases
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Tauri signing keys for auto-updater
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          # Environment variables from .env file
          SHOPIFY_API_KEY: ${{ secrets.SHOPIFY_API_KEY }}
          SHOPIFY_API_SECRET_KEY: ${{ secrets.SHOPIFY_API_SECRET_KEY }}
          SHOPIFY_ACCESS_TOKEN: ${{ secrets.SHOPIFY_ACCESS_TOKEN }}
          SHOPIFY_SHOP_DOMAIN: ${{ secrets.SHOPIFY_SHOP_DOMAIN }}
          SHOPIFY_API_VERSION: ${{ secrets.SHOPIFY_API_VERSION }}
          LOCATION_TREVISO: ${{ secrets.LOCATION_TREVISO }}
          LOCATION_MOGLIANO: ${{ secrets.LOCATION_MOGLIANO }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          VERSION: ${{ secrets.VERSION }}
          VITE_VERSION: ${{ secrets.VITE_VERSION }}
          OFFLINE_DEVELOPMENT: "false"
        with:
          # Release configuration
          tagName: "v__VERSION__"
          releaseName: "Inventario Cappelletto v__VERSION__"
          releaseBody: "See the assets to download and install this version."
          releaseDraft: false
          prerelease: false
          # Build arguments for each platform
          args: ${{ matrix.args }}
          # Enable updater JSON generation for auto-updates
          includeUpdaterJson: true
